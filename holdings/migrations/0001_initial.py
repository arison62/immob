# Generated by Django 5.2.7 on 2025-10-19 14:47

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_userpropertypermission_owner'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('name', models.CharField(max_length=255, verbose_name='Building name')),
                ('address', models.CharField(max_length=500, verbose_name='Address')),
                ('city', models.CharField(db_index=True, max_length=100, verbose_name='City')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal code')),
                ('country', models.CharField(default='Cameroun', max_length=100, verbose_name='Country')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('floor_count', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of floors')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='accounts.owner')),
            ],
            options={
                'verbose_name': 'Building',
                'verbose_name_plural': 'Buildings',
                'db_table': 'immob_buildings',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('reference_code', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Reference code')),
                ('name', models.CharField(max_length=255, verbose_name='Property name')),
                ('type', models.CharField(choices=[('APARTMENT', 'Apartment'), ('HOUSE', 'House'), ('STUDIO', 'Studio')], db_index=True, max_length=20, verbose_name='Property type')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('OCCUPIED', 'Occupied'), ('MAINTENANCE', 'Maintenance'), ('UNAVAILABLE', 'Unavailable')], db_index=True, default='AVAILABLE', max_length=20, verbose_name='Status')),
                ('floor', models.IntegerField(blank=True, null=True, verbose_name='Floor')),
                ('door_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Door number')),
                ('surface_area', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Surface area (mÂ²)')),
                ('room_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of rooms')),
                ('bedroom_count', models.PositiveIntegerField(default=0, verbose_name='Number of bedrooms')),
                ('bathroom_count', models.PositiveIntegerField(default=1, verbose_name='Number of bathrooms')),
                ('has_parking', models.BooleanField(default=False, verbose_name='Has parking')),
                ('has_balcony', models.BooleanField(default=False, verbose_name='Has balcony')),
                ('equipment_list', models.JSONField(blank=True, default=list, verbose_name='Equipment list')),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Monthly rent')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='building_properties', to='holdings.building')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_properties', to='accounts.owner')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
                'db_table': 'immob_properties',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('type', models.CharField(choices=[('REPAIR', 'Repair'), ('INSPECTION', 'Inspection'), ('CLEANING', 'Cleaning'), ('IMPROVEMENT', 'Improvement')], db_index=True, max_length=20, verbose_name='Type')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], db_index=True, default='SCHEDULED', max_length=20, verbose_name='Status')),
                ('scheduled_date', models.DateField(db_index=True, verbose_name='Scheduled date')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Completion date')),
                ('description', models.TextField(verbose_name='Description')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Cost')),
                ('technician_name', models.CharField(blank=True, max_length=200, verbose_name='Technician name')),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='building_maintenance_logs', to='holdings.building')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_maintenance_logs', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property_maintenance_logs', to='holdings.property')),
            ],
            options={
                'verbose_name': 'Maintenance Log',
                'verbose_name_plural': 'Maintenance Logs',
                'db_table': 'immob_maintenance_logs',
            },
        ),
        migrations.CreateModel(
            name='PropertyPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_path', models.ImageField(upload_to='properties/%Y/%m/', verbose_name='Photo')),
                ('file_name', models.CharField(max_length=255, verbose_name='File name')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primary photo')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Display order')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_photos', to='holdings.property')),
            ],
            options={
                'verbose_name': 'Property Photo',
                'verbose_name_plural': 'Property Photos',
                'db_table': 'immob_property_photos',
                'ordering': ['display_order', 'uploaded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='building',
            index=models.Index(fields=['owner', 'city'], name='immob_build_owner_i_5c0b1e_idx'),
        ),
        migrations.AddIndex(
            model_name='building',
            index=models.Index(fields=['postal_code'], name='immob_build_postal__79457e_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['owner', 'status'], name='immob_prope_owner_i_934f32_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['building', 'floor'], name='immob_prope_buildin_b08f16_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['type', 'status'], name='immob_prope_type_bf55d7_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['reference_code'], name='immob_prope_referen_995d34_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancelog',
            index=models.Index(fields=['property', 'status'], name='immob_maint_propert_f0396f_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancelog',
            index=models.Index(fields=['scheduled_date', 'status'], name='immob_maint_schedul_4a8d6d_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancelog',
            index=models.Index(fields=['type', 'status'], name='immob_maint_type_597219_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyphoto',
            index=models.Index(fields=['property', 'is_primary'], name='immob_prope_propert_aa458c_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyphoto',
            index=models.Index(fields=['property', 'display_order'], name='immob_prope_propert_5e1fc5_idx'),
        ),
    ]
